" Environment {

    " Setup Plugin Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/Vundle.vim
        call vundle#rc()
    " }

" }

" Plugins {

    " Deps {
        Plugin 'VundleVim/Vundle.vim'

        if executable('ag')
            Plugin 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        elseif executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Plugin 'mileszs/ack.vim'
        elseif executable('ack')
            Plugin 'mileszs/ack.vim'
        endif
    " }

    " list only the plugin groups you will use{
        if !exists('g:plugin_groups')"
            let g:plugin_groups=['general', 'youcompleteme', 'programming', 'python']
        endif
    " }

    " General {
        if count(g:plugin_groups, 'general')
            Plugin 'scrooloose/nerdtree'
            Plugin 'altercation/vim-colors-solarized'
            Plugin 'tpope/vim-surround'
            Plugin 'tpope/vim-repeat'
            Plugin 'rhysd/conflict-marker.vim'
            Plugin 'Raimondi/delimitMate'
            Plugin 'ctrlpvim/ctrlp.vim'
            Plugin 'tacahiroy/ctrlp-funky'
            "Plugin 'terryma/vim-multiple-cursors'
            Plugin 'vim-scripts/sessionman.vim'
            "Plugin 'matchit.zip'
            Plugin 'vim-airline/vim-airline'
            Plugin 'vim-airline/vim-airline-themes'
            Plugin 'powerline/fonts'
            "Plugin 'bling/vim-bufferline'
            Plugin 'easymotion/vim-easymotion'
            Plugin 'jistr/vim-nerdtree-tabs'
            "Plugin 'flazz/vim-colorschemes'
            Plugin 'mbbill/undotree'
            "Plugin 'nathanaelkane/vim-indent-guides'
            Plugin 'vim-scripts/restore_view.vim'
            Plugin 'mhinz/vim-signify'
            "Plugin 'tpope/vim-abolish.git'
            "Plugin 'osyo-manga/vim-over'
            "Plugin 'kana/vim-textobj-user'
            "Plugin 'kana/vim-textobj-indent'
            "Plugin 'gcmt/wildfire.vim'
            Plugin 'iamcco/markdown-preview.vim'
            Plugin 'plasticboy/vim-markdown'
            Plugin 'danro/rename.vim'
        endif
    " }

    " Writing {
        if count(g:plugin_groups, 'writing')
            Plugin 'reedes/vim-litecorrect'
            Plugin 'reedes/vim-textobj-sentence'
            Plugin 'reedes/vim-textobj-quote'
            Plugin 'reedes/vim-wordy'
        endif
    " }

    " Programming {
        if count(g:plugin_groups, 'programming')
            " Pick one of the checksyntax, jslint, or syntastic
            Plugin 'scrooloose/syntastic'
            Plugin 'tpope/vim-fugitive'
            "Plugin 'mattn/webapi-vim'
            "Plugin 'mattn/gist-vim'
            Plugin 'scrooloose/nerdcommenter'
            "Plugin 'tpope/vim-commentary'
            Plugin 'godlygeek/tabular'
            Plugin 'luochen1990/rainbow'
            if executable('ctags')
                Plugin 'majutsushi/tagbar'
            endif
            Plugin 'vim-scripts/winmanager'
            Plugin 'vim-scripts/DoxygenToolkit.vim'
            Plugin 'vim-scripts/a.vim'
        endif
    " }

    " Snippets & AutoComplete {
        if count(g:plugin_groups, 'snipmate')
            Plugin 'MarcWeber/vim-addon-mw-utils'
            Plugin 'tomtom/tlib_vim'
            Plugin 'garbas/vim-snipmate'
            Plugin 'honza/vim-snippets'
        elseif count(g:plugin_groups, 'youcompleteme')
            " Plugin 'Valloric/YouCompleteMe'
            Plugin 'SirVer/ultisnips'
            Plugin 'honza/vim-snippets'
        endif
    " }

    " PHP {
        if count(g:plugin_groups, 'php')
            Plugin 'spf13/PIV'
            Plugin 'arnaud-lb/vim-php-namespace'
            Plugin 'beyondwords/vim-twig'
        endif
    " }

    " Python {
        if count(g:plugin_groups, 'python')
            " Pick either python-mode or pyflakes & pydoc
            " Plugin 'python-mode/python-mode'
            " Plugin 'vim-scripts/python.vim'
            " Plugin 'vim-scripts/python_match.vim'
            Plugin 'vim-scripts/pythoncomplete'
        endif
    " }

    " Javascript {
        if count(g:plugin_groups, 'javascript')
            Plugin 'elzr/vim-json'
            Plugin 'groenewege/vim-less'
            Plugin 'pangloss/vim-javascript'
            Plugin 'briancollins/vim-jst'
            Plugin 'kchmck/vim-coffee-script'
        endif
    " }

    " Scala {
        if count(g:plugin_groups, 'scala')
            Plugin 'derekwyatt/vim-scala'
            Plugin 'derekwyatt/vim-sbt'
            Plugin 'xptemplate'
        endif
    " }

    " Haskell {
        if count(g:plugin_groups, 'haskell')
            Plugin 'travitch/hasksyn'
            Plugin 'dag/vim2hs'
            Plugin 'Twinside/vim-haskellConceal'
            Plugin 'Twinside/vim-haskellFold'
            Plugin 'lukerandall/haskellmode-vim'
            Plugin 'eagletmt/neco-ghc'
            Plugin 'eagletmt/ghcmod-vim'
            Plugin 'Shougo/vimproc.vim'
            Plugin 'adinapoli/cumino'
            Plugin 'bitc/vim-hdevtools'
        endif
    " }

    " HTML {
        if count(g:plugin_groups, 'html')
            Plugin 'heracek/HTML-AutoCloseTag'
            Plugin 'hail2u/vim-css3-syntax'
            Plugin 'gorodinskiy/vim-coloresque'
            Plugin 'tpope/vim-haml'
            Plugin 'mattn/emmet-vim'
        endif
    " }

    " Ruby {
        if count(g:plugin_groups, 'ruby')
            Plugin 'tpope/vim-rails'
            let g:rubycomplete_buffer_loading = 1
            "let g:rubycomplete_classes_in_global = 1
            "let g:rubycomplete_rails = 1
        endif
    " }

    " Puppet {
        if count(g:plugin_groups, 'puppet')
            Plugin 'rodjek/vim-puppet'
        endif
    " }

    " Go Lang {
        if count(g:plugin_groups, 'go')
            "Plugin 'Blackrush/vim-gocode'
            Plugin 'fatih/vim-go'
        endif
    " }

    " Elixir {
        if count(g:plugin_groups, 'elixir')
            Plugin 'elixir-lang/vim-elixir'
            Plugin 'carlosgaldino/elixir-snippets'
            Plugin 'mattreduce/vim-mix'
        endif
    " }

    " Misc {
        if count(g:plugin_groups, 'misc')
            Plugin 'rust-lang/rust.vim'
            Plugin 'tpope/vim-markdown'
            Plugin 'spf13/vim-preview'
            Plugin 'tpope/vim-cucumber'
            Plugin 'cespare/vim-toml'
            Plugin 'quentindecock/vim-cucumber-align-pipes'
            Plugin 'saltstack/salt-vim'
        endif
    " }

" }
